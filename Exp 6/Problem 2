Create a program to use lambda expressions and stream operations to filter students scoring above 75%, sort them by marks, and display their names.
code
import java.util.*;
import java.util.stream.Collectors;

class Student {
    String name;
    double marks;

    public Student(String name, double marks) {
        this.name = name;
        this.marks = marks;
    }

    public String getName() {
        return name;
    }

    public double getMarks() {
        return marks;
    }
}

public class StudentFilter {
    public static void main(String[] args) {
        List<Student> students = Arrays.asList(
            new Student("Alice", 85.5),
            new Student("Bob", 72.0),
            new Student("Charlie", 90.2),
            new Student("David", 65.8),
            new Student("Eve", 78.9)
        );

        // Filtering students with marks > 75%, sorting by marks (descending), and displaying names
        List<String> topStudents = students.stream()
            .filter(s -> s.getMarks() > 75)   // Filter students with marks above 75%
            .sorted((s1, s2) -> Double.compare(s2.getMarks(), s1.getMarks())) // Sort by marks in descending order
            .map(Student::getName)            // Extract student names
            .collect(Collectors.toList());    // Collect names into a list

        System.out.println("Students scoring above 75% (sorted by marks):");
        topStudents.forEach(System.out::println);
    }
}
